import{o as e,i as r}from"./utils-BKNBMClf.js";import{t as o}from"./Tag-DnTiE1E0.js";import{a6 as n,y as a,f4 as t,x as s,f5 as i,A as l,d,C as c,r as u,s as v,i as f,G as h,a8 as g,H as m,gm as b,D as p,ay as z,aA as y,E as O,aa as x,a9 as F,k as j,fz as L,co as R}from"./index-DRiF00Hx.js";const P=n("n-avatar-group"),E=a("avatar","\n width: var(--n-merged-size);\n height: var(--n-merged-size);\n color: #FFF;\n font-size: var(--n-font-size);\n display: inline-flex;\n position: relative;\n overflow: hidden;\n text-align: center;\n border: var(--n-border);\n border-radius: var(--n-border-radius);\n --n-merged-color: var(--n-color);\n background-color: var(--n-merged-color);\n transition:\n border-color .3s var(--n-bezier),\n background-color .3s var(--n-bezier),\n color .3s var(--n-bezier);\n",[t(s("&","--n-merged-color: var(--n-color-modal);")),i(s("&","--n-merged-color: var(--n-color-popover);")),s("img","\n width: 100%;\n height: 100%;\n "),l("text","\n white-space: nowrap;\n display: inline-block;\n position: absolute;\n left: 50%;\n top: 50%;\n "),a("icon","\n vertical-align: bottom;\n font-size: calc(var(--n-merged-size) - 6px);\n "),l("text","line-height: 1.25")]),k=d({name:"Avatar",props:Object.assign(Object.assign({},h.props),{size:[String,Number],src:String,circle:{type:Boolean,default:void 0},objectFit:String,round:{type:Boolean,default:void 0},bordered:{type:Boolean,default:void 0},onError:Function,fallbackSrc:String,intersectionObserverOptions:Object,lazy:Boolean,onLoad:Function,renderPlaceholder:Function,renderFallback:Function,imgProps:Object,color:String}),setup(r){const{mergedClsPrefixRef:n,inlineThemeDisabled:a}=c(r),t=u(!1);let s=null;const i=u(null),l=u(null),d=v(P,null),x=f((()=>{const{size:e}=r;if(e)return e;const{size:o}=d||{};return o||"medium"})),F=h("Avatar","-avatar",E,L,r,n),j=v(o,null),R=f((()=>{if(d)return!0;const{round:e,circle:o}=r;return void 0!==e||void 0!==o?e||o:!!j&&j.roundRef.value})),k=f((()=>!!d||(r.bordered||!1))),S=f((()=>{const e=x.value,o=R.value,n=k.value,{color:a}=r,{self:{borderRadius:t,fontSize:s,color:i,border:l,colorModal:d,colorPopover:c},common:{cubicBezierEaseInOut:u}}=F.value;let v;return v="number"==typeof e?`${e}px`:F.value.self[g("height",e)],{"--n-font-size":s,"--n-border":n?l:"none","--n-border-radius":o?"50%":t,"--n-color":a||i,"--n-color-modal":a||d,"--n-color-popover":a||c,"--n-bezier":u,"--n-merged-size":`var(--n-avatar-size-override, ${v})`}})),T=a?m("avatar",f((()=>{const e=x.value,o=R.value,n=k.value,{color:a}=r;let t="";return e&&(t+="number"==typeof e?`a${e}`:e[0]),o&&(t+="b"),n&&(t+="c"),a&&(t+=b(a)),t})),S,r):void 0,$=u(!r.lazy);p((()=>{if(r.lazy&&r.intersectionObserverOptions){let o;const n=z((()=>{null==o||o(),o=void 0,r.lazy&&(o=e(l.value,r.intersectionObserverOptions,$))}));y((()=>{n(),null==o||o()}))}})),O((()=>{var e;return r.src||(null===(e=r.imgProps)||void 0===e?void 0:e.src)}),(()=>{t.value=!1}));const C=u(!r.lazy);return{textRef:i,selfRef:l,mergedRoundRef:R,mergedClsPrefix:n,fitTextTransform:()=>{const{value:e}=i;if(e&&(null===s||s!==e.innerHTML)){s=e.innerHTML;const{value:r}=l;if(r){const{offsetWidth:o,offsetHeight:n}=r,{offsetWidth:a,offsetHeight:t}=e,s=.9,i=Math.min(o/a*s,n/t*s,1);e.style.transform=`translateX(-50%) translateY(-50%) scale(${i})`}}},cssVars:a?void 0:S,themeClass:null==T?void 0:T.themeClass,onRender:null==T?void 0:T.onRender,hasLoadError:t,shouldStartLoading:$,loaded:C,mergedOnError:e=>{if(!$.value)return;t.value=!0;const{onError:o,imgProps:{onError:n}={}}=r;null==o||o(e),null==n||n(e)},mergedOnLoad:e=>{const{onLoad:o,imgProps:{onLoad:n}={}}=r;null==o||o(e),null==n||n(e),C.value=!0}}},render(){var e,o;const{$slots:n,src:a,mergedClsPrefix:t,lazy:s,onRender:i,loaded:l,hasLoadError:d,imgProps:c={}}=this;let u;null==i||i();const v=!l&&!d&&(this.renderPlaceholder?this.renderPlaceholder():null===(o=(e=this.$slots).placeholder)||void 0===o?void 0:o.call(e));return u=this.hasLoadError?this.renderFallback?this.renderFallback():x(n.fallback,(()=>[j("img",{src:this.fallbackSrc,style:{objectFit:this.objectFit}})])):F(n.default,(e=>{if(e)return j(R,{onResize:this.fitTextTransform},{default:()=>j("span",{ref:"textRef",class:`${t}-avatar__text`},e)});if(a||c.src){const e=this.src||c.src;return j("img",Object.assign(Object.assign({},c),{loading:r&&!this.intersectionObserverOptions&&s?"lazy":"eager",src:s&&this.intersectionObserverOptions?this.shouldStartLoading?e:void 0:e,"data-image-src":e,onLoad:this.mergedOnLoad,onError:this.mergedOnError,style:[c.style||"",{objectFit:this.objectFit},v?{height:"0",width:"0",visibility:"hidden",position:"absolute"}:""]}))}})),j("span",{ref:"selfRef",class:[`${t}-avatar`,this.themeClass],style:this.cssVars},u,s&&v)}});export{k as _};
